name: dorolaw
services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    volumes:
      - /home/ubuntu/videos:/home/ubuntu/videos
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    depends_on:
      - rabbitmq
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    networks:
      - app-network

  ai:
    image: ai:latest
    expose:
      - "5000"
    volumes:
      - /home/ubuntu/videos:/home/ubuntu/videos
    depends_on:
      - rabbitmq
    networks:
      - app-network
    command: bash -c "cd fastapi && nohup python3 videoRecognizerAPI.py > api.log 2>&1"
    # build:
    #   context: ../ai
    #   dockerfile: Dockerfile
    # expose:
    #   - "5000"
    # networks:
    #   - app-network

  nginx:
    build:
      context: ../nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/ssl:/etc/nginx/ssl
      - ../nginx/logs:/var/log/nginx
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../nginx/conf.d:/etc/nginx/conf.d
      - ../frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
      - ai
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    expose:
      - "5672"      # 메시지 브로커 포트
      - "15672"     # 웹 관리 콘솔 포트
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  # 호스트 모니터링
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    expose:
      - "9100"
    networks:
      - app-network

  # 컨테이너 모니터링
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - "8080"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # 필요 시 데이터 보존하려면 아래처럼 볼륨 추가 가능
      # - ./prometheus_data:/prometheus
    command:
      - '--web.external-url=https://j12a501.p.ssafy.io/prometheus/'
    expose:
      - "9090"  
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
      - ai
      - nginx
      - rabbitmq
      - node-exporter
      - cadvisor

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    expose:
      - "3000"  
    networks:
      - app-network
    depends_on:
      - prometheus

networks:
  app-network:
    driver: bridge
