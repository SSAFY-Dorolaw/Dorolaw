/bin/sh: 1: gcc: not found
04/02 16:22:31 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 496211720
    GPU 0: NVIDIA GeForce RTX 4050 Laptop GPU
    CUDA_HOME: None
    GCC: n/a
    PyTorch: 2.4.1+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.19.1+cu121
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 496211720
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

04/02 16:22:31 - mmengine - INFO - Config:
ann_file_test = '/home/ubuntu/Dorolaw/ai-model/datasets/accident_aihub/processed/test/annotation_index_test_mp4.txt'
ann_file_train = 'datasets/accident_aihub/processed/train/annotation_index_train_mp4.txt'
ann_file_val = 'datasets/accident_aihub/processed/val/annotation_index_val_mp4.txt'
auto_scale_lr = dict(base_batch_size=64, enable=False)
data_root = ''
data_root_val = ''
dataset_type = 'VideoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=3, max_keep_ckpts=5, save_best='auto', type='CheckpointHook'),
    logger=dict(ignore_last=False, interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    runtime_info=dict(type='RuntimeInfoHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    sync_buffers=dict(type='SyncBuffersHook'),
    timer=dict(type='IterTimerHook'))
default_scope = 'mmaction'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
file_client_args = dict(io_backend='disk')
launcher = 'none'
load_from = '/home/ubuntu/Dorolaw/ai-model/checkpoints/tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb_20220906-2692d16c.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=20)
model = dict(
    backbone=dict(
        arch='tiny',
        attn_drop_rate=0.0,
        drop_path_rate=0.1,
        drop_rate=0.0,
        mlp_ratio=4.0,
        patch_norm=True,
        patch_size=(
            2,
            4,
            4,
        ),
        pretrained=
        'https://download.openmmlab.com/mmaction/v1.0/recognition/swin/swin_tiny_patch4_window7_224.pth',
        pretrained2d=True,
        qk_scale=None,
        qkv_bias=True,
        type='SwinTransformer3D',
        window_size=(
            8,
            7,
            7,
        )),
    cls_head=dict(
        average_clips='prob',
        dropout_ratio=0.5,
        in_channels=768,
        init_std=0.01,
        num_classes=434,
        spatial_type='avg',
        type='I3DHead'),
    data_preprocessor=dict(
        format_shape='NCTHW',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='ActionDataPreprocessor'),
    type='Recognizer3D')
optim_wrapper = dict(
    clip_grad=dict(max_norm=40, norm_type=2),
    constructor='SwinOptimWrapperConstructor',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ),
        lr=0.001,
        momentum=0.9,
        type='AdamW',
        weight_decay=0.02),
    paramwise_cfg=dict(
        absolute_pos_embed=dict(decay_mult=0.0),
        backbone=dict(lr_mult=0.1),
        norm=dict(decay_mult=0.0),
        relative_position_bias_table=dict(decay_mult=0.0)),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(
        begin=0,
        by_epoch=True,
        convert_to_iter_based=True,
        end=2.5,
        start_factor=0.1,
        type='LinearLR'),
    dict(
        T_max=30,
        begin=0,
        by_epoch=True,
        end=30,
        eta_min=0,
        type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file=
        '/home/ubuntu/Dorolaw/ai-model/datasets/accident_aihub/processed/test/annotation_index_test_mp4.txt',
        data_prefix=dict(video='/home/ubuntu/Dorolaw/ai-model'),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=4,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                224,
            ), type='Resize'),
            dict(crop_size=224, type='ThreeCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(type='AccMetric'),
    dict(
        out_file_path='/home/ubuntu/Dorolaw/ai-model/work_dirs/benchmark_result/TSN_result.pkl',
        type='DumpResults'),
]
test_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=4,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        224,
    ), type='Resize'),
    dict(crop_size=224, type='ThreeCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
train_cfg = dict(
    max_epochs=30, type='EpochBasedTrainLoop', val_begin=1, val_interval=3)
train_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='datasets/accident_aihub/processed/train/annotation_index_train_mp4.txt',
        data_prefix=dict(video=''),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(type='RandomResizedCrop'),
            dict(keep_ratio=False, scale=(
                224,
                224,
            ), type='Resize'),
            dict(flip_ratio=0.5, type='Flip'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(clip_len=32, frame_interval=2, num_clips=1, type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(type='RandomResizedCrop'),
    dict(keep_ratio=False, scale=(
        224,
        224,
    ), type='Resize'),
    dict(flip_ratio=0.5, type='Flip'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=8,
    dataset=dict(
        ann_file='datasets/accident_aihub/processed/val/annotation_index_val_mp4.txt',
        data_prefix=dict(video=''),
        pipeline=[
            dict(io_backend='disk', type='DecordInit'),
            dict(
                clip_len=32,
                frame_interval=2,
                num_clips=1,
                test_mode=True,
                type='SampleFrames'),
            dict(type='DecordDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='CenterCrop'),
            dict(input_format='NCTHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='VideoDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(type='AccMetric')
val_pipeline = [
    dict(io_backend='disk', type='DecordInit'),
    dict(
        clip_len=32,
        frame_interval=2,
        num_clips=1,
        test_mode=True,
        type='SampleFrames'),
    dict(type='DecordDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='CenterCrop'),
    dict(input_format='NCTHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='ActionVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '/home/ubuntu/Dorolaw/ai-model/work_dirs/tsn_custom1'

04/02 16:22:33 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
04/02 16:22:33 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
04/02 16:22:34 - mmengine - WARNING - The prefix is not set in metric class DumpResults.
Loads checkpoint by local backend from path: /home/ubuntu/Dorolaw/ai-model/checkpoints/tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb_20220906-2692d16c.pth
The model and loaded state dict do not match exactly

size mismatch for cls_head.fc_cls.weight: copying a param with shape torch.Size([400, 2048]) from checkpoint, the shape in current model is torch.Size([434, 768]).
size mismatch for cls_head.fc_cls.bias: copying a param with shape torch.Size([400]) from checkpoint, the shape in current model is torch.Size([434]).
unexpected key in source state_dict: backbone.conv1.conv.weight, backbone.conv1.bn.weight, backbone.conv1.bn.bias, backbone.conv1.bn.running_mean, backbone.conv1.bn.running_var, backbone.conv1.bn.num_batches_tracked, backbone.layer1.0.conv1.conv.weight, backbone.layer1.0.conv1.bn.weight, backbone.layer1.0.conv1.bn.bias, backbone.layer1.0.conv1.bn.running_mean, backbone.layer1.0.conv1.bn.running_var, backbone.layer1.0.conv1.bn.num_batches_tracked, backbone.layer1.0.conv2.conv.weight, backbone.layer1.0.conv2.bn.weight, backbone.layer1.0.conv2.bn.bias, backbone.layer1.0.conv2.bn.running_mean, backbone.layer1.0.conv2.bn.running_var, backbone.layer1.0.conv2.bn.num_batches_tracked, backbone.layer1.0.conv3.conv.weight, backbone.layer1.0.conv3.bn.weight, backbone.layer1.0.conv3.bn.bias, backbone.layer1.0.conv3.bn.running_mean, backbone.layer1.0.conv3.bn.running_var, backbone.layer1.0.conv3.bn.num_batches_tracked, backbone.layer1.0.downsample.conv.weight, backbone.layer1.0.downsample.bn.weight, backbone.layer1.0.downsample.bn.bias, backbone.layer1.0.downsample.bn.running_mean, backbone.layer1.0.downsample.bn.running_var, backbone.layer1.0.downsample.bn.num_batches_tracked, backbone.layer1.1.conv1.conv.weight, backbone.layer1.1.conv1.bn.weight, backbone.layer1.1.conv1.bn.bias, backbone.layer1.1.conv1.bn.running_mean, backbone.layer1.1.conv1.bn.running_var, backbone.layer1.1.conv1.bn.num_batches_tracked, backbone.layer1.1.conv2.conv.weight, backbone.layer1.1.conv2.bn.weight, backbone.layer1.1.conv2.bn.bias, backbone.layer1.1.conv2.bn.running_mean, backbone.layer1.1.conv2.bn.running_var, backbone.layer1.1.conv2.bn.num_batches_tracked, backbone.layer1.1.conv3.conv.weight, backbone.layer1.1.conv3.bn.weight, backbone.layer1.1.conv3.bn.bias, backbone.layer1.1.conv3.bn.running_mean, backbone.layer1.1.conv3.bn.running_var, backbone.layer1.1.conv3.bn.num_batches_tracked, backbone.layer1.2.conv1.conv.weight, backbone.layer1.2.conv1.bn.weight, backbone.layer1.2.conv1.bn.bias, backbone.layer1.2.conv1.bn.running_mean, backbone.layer1.2.conv1.bn.running_var, backbone.layer1.2.conv1.bn.num_batches_tracked, backbone.layer1.2.conv2.conv.weight, backbone.layer1.2.conv2.bn.weight, backbone.layer1.2.conv2.bn.bias, backbone.layer1.2.conv2.bn.running_mean, backbone.layer1.2.conv2.bn.running_var, backbone.layer1.2.conv2.bn.num_batches_tracked, backbone.layer1.2.conv3.conv.weight, backbone.layer1.2.conv3.bn.weight, backbone.layer1.2.conv3.bn.bias, backbone.layer1.2.conv3.bn.running_mean, backbone.layer1.2.conv3.bn.running_var, backbone.layer1.2.conv3.bn.num_batches_tracked, backbone.layer2.0.conv1.conv.weight, backbone.layer2.0.conv1.bn.weight, backbone.layer2.0.conv1.bn.bias, backbone.layer2.0.conv1.bn.running_mean, backbone.layer2.0.conv1.bn.running_var, backbone.layer2.0.conv1.bn.num_batches_tracked, backbone.layer2.0.conv2.conv.weight, backbone.layer2.0.conv2.bn.weight, backbone.layer2.0.conv2.bn.bias, backbone.layer2.0.conv2.bn.running_mean, backbone.layer2.0.conv2.bn.running_var, backbone.layer2.0.conv2.bn.num_batches_tracked, backbone.layer2.0.conv3.conv.weight, backbone.layer2.0.conv3.bn.weight, backbone.layer2.0.conv3.bn.bias, backbone.layer2.0.conv3.bn.running_mean, backbone.layer2.0.conv3.bn.running_var, backbone.layer2.0.conv3.bn.num_batches_tracked, backbone.layer2.0.downsample.conv.weight, backbone.layer2.0.downsample.bn.weight, backbone.layer2.0.downsample.bn.bias, backbone.layer2.0.downsample.bn.running_mean, backbone.layer2.0.downsample.bn.running_var, backbone.layer2.0.downsample.bn.num_batches_tracked, backbone.layer2.1.conv1.conv.weight, backbone.layer2.1.conv1.bn.weight, backbone.layer2.1.conv1.bn.bias, backbone.layer2.1.conv1.bn.running_mean, backbone.layer2.1.conv1.bn.running_var, backbone.layer2.1.conv1.bn.num_batches_tracked, backbone.layer2.1.conv2.conv.weight, backbone.layer2.1.conv2.bn.weight, backbone.layer2.1.conv2.bn.bias, backbone.layer2.1.conv2.bn.running_mean, backbone.layer2.1.conv2.bn.running_var, backbone.layer2.1.conv2.bn.num_batches_tracked, backbone.layer2.1.conv3.conv.weight, backbone.layer2.1.conv3.bn.weight, backbone.layer2.1.conv3.bn.bias, backbone.layer2.1.conv3.bn.running_mean, backbone.layer2.1.conv3.bn.running_var, backbone.layer2.1.conv3.bn.num_batches_tracked, backbone.layer2.2.conv1.conv.weight, backbone.layer2.2.conv1.bn.weight, backbone.layer2.2.conv1.bn.bias, backbone.layer2.2.conv1.bn.running_mean, backbone.layer2.2.conv1.bn.running_var, backbone.layer2.2.conv1.bn.num_batches_tracked, backbone.layer2.2.conv2.conv.weight, backbone.layer2.2.conv2.bn.weight, backbone.layer2.2.conv2.bn.bias, backbone.layer2.2.conv2.bn.running_mean, backbone.layer2.2.conv2.bn.running_var, backbone.layer2.2.conv2.bn.num_batches_tracked, backbone.layer2.2.conv3.conv.weight, backbone.layer2.2.conv3.bn.weight, backbone.layer2.2.conv3.bn.bias, backbone.layer2.2.conv3.bn.running_mean, backbone.layer2.2.conv3.bn.running_var, backbone.layer2.2.conv3.bn.num_batches_tracked, backbone.layer2.3.conv1.conv.weight, backbone.layer2.3.conv1.bn.weight, backbone.layer2.3.conv1.bn.bias, backbone.layer2.3.conv1.bn.running_mean, backbone.layer2.3.conv1.bn.running_var, backbone.layer2.3.conv1.bn.num_batches_tracked, backbone.layer2.3.conv2.conv.weight, backbone.layer2.3.conv2.bn.weight, backbone.layer2.3.conv2.bn.bias, backbone.layer2.3.conv2.bn.running_mean, backbone.layer2.3.conv2.bn.running_var, backbone.layer2.3.conv2.bn.num_batches_tracked, backbone.layer2.3.conv3.conv.weight, backbone.layer2.3.conv3.bn.weight, backbone.layer2.3.conv3.bn.bias, backbone.layer2.3.conv3.bn.running_mean, backbone.layer2.3.conv3.bn.running_var, backbone.layer2.3.conv3.bn.num_batches_tracked, backbone.layer3.0.conv1.conv.weight, backbone.layer3.0.conv1.bn.weight, backbone.layer3.0.conv1.bn.bias, backbone.layer3.0.conv1.bn.running_mean, backbone.layer3.0.conv1.bn.running_var, backbone.layer3.0.conv1.bn.num_batches_tracked, backbone.layer3.0.conv2.conv.weight, backbone.layer3.0.conv2.bn.weight, backbone.layer3.0.conv2.bn.bias, backbone.layer3.0.conv2.bn.running_mean, backbone.layer3.0.conv2.bn.running_var, backbone.layer3.0.conv2.bn.num_batches_tracked, backbone.layer3.0.conv3.conv.weight, backbone.layer3.0.conv3.bn.weight, backbone.layer3.0.conv3.bn.bias, backbone.layer3.0.conv3.bn.running_mean, backbone.layer3.0.conv3.bn.running_var, backbone.layer3.0.conv3.bn.num_batches_tracked, backbone.layer3.0.downsample.conv.weight, backbone.layer3.0.downsample.bn.weight, backbone.layer3.0.downsample.bn.bias, backbone.layer3.0.downsample.bn.running_mean, backbone.layer3.0.downsample.bn.running_var, backbone.layer3.0.downsample.bn.num_batches_tracked, backbone.layer3.1.conv1.conv.weight, backbone.layer3.1.conv1.bn.weight, backbone.layer3.1.conv1.bn.bias, backbone.layer3.1.conv1.bn.running_mean, backbone.layer3.1.conv1.bn.running_var, backbone.layer3.1.conv1.bn.num_batches_tracked, backbone.layer3.1.conv2.conv.weight, backbone.layer3.1.conv2.bn.weight, backbone.layer3.1.conv2.bn.bias, backbone.layer3.1.conv2.bn.running_mean, backbone.layer3.1.conv2.bn.running_var, backbone.layer3.1.conv2.bn.num_batches_tracked, backbone.layer3.1.conv3.conv.weight, backbone.layer3.1.conv3.bn.weight, backbone.layer3.1.conv3.bn.bias, backbone.layer3.1.conv3.bn.running_mean, backbone.layer3.1.conv3.bn.running_var, backbone.layer3.1.conv3.bn.num_batches_tracked, backbone.layer3.2.conv1.conv.weight, backbone.layer3.2.conv1.bn.weight, backbone.layer3.2.conv1.bn.bias, backbone.layer3.2.conv1.bn.running_mean, backbone.layer3.2.conv1.bn.running_var, backbone.layer3.2.conv1.bn.num_batches_tracked, backbone.layer3.2.conv2.conv.weight, backbone.layer3.2.conv2.bn.weight, backbone.layer3.2.conv2.bn.bias, backbone.layer3.2.conv2.bn.running_mean, backbone.layer3.2.conv2.bn.running_var, backbone.layer3.2.conv2.bn.num_batches_tracked, backbone.layer3.2.conv3.conv.weight, backbone.layer3.2.conv3.bn.weight, backbone.layer3.2.conv3.bn.bias, backbone.layer3.2.conv3.bn.running_mean, backbone.layer3.2.conv3.bn.running_var, backbone.layer3.2.conv3.bn.num_batches_tracked, backbone.layer3.3.conv1.conv.weight, backbone.layer3.3.conv1.bn.weight, backbone.layer3.3.conv1.bn.bias, backbone.layer3.3.conv1.bn.running_mean, backbone.layer3.3.conv1.bn.running_var, backbone.layer3.3.conv1.bn.num_batches_tracked, backbone.layer3.3.conv2.conv.weight, backbone.layer3.3.conv2.bn.weight, backbone.layer3.3.conv2.bn.bias, backbone.layer3.3.conv2.bn.running_mean, backbone.layer3.3.conv2.bn.running_var, backbone.layer3.3.conv2.bn.num_batches_tracked, backbone.layer3.3.conv3.conv.weight, backbone.layer3.3.conv3.bn.weight, backbone.layer3.3.conv3.bn.bias, backbone.layer3.3.conv3.bn.running_mean, backbone.layer3.3.conv3.bn.running_var, backbone.layer3.3.conv3.bn.num_batches_tracked, backbone.layer3.4.conv1.conv.weight, backbone.layer3.4.conv1.bn.weight, backbone.layer3.4.conv1.bn.bias, backbone.layer3.4.conv1.bn.running_mean, backbone.layer3.4.conv1.bn.running_var, backbone.layer3.4.conv1.bn.num_batches_tracked, backbone.layer3.4.conv2.conv.weight, backbone.layer3.4.conv2.bn.weight, backbone.layer3.4.conv2.bn.bias, backbone.layer3.4.conv2.bn.running_mean, backbone.layer3.4.conv2.bn.running_var, backbone.layer3.4.conv2.bn.num_batches_tracked, backbone.layer3.4.conv3.conv.weight, backbone.layer3.4.conv3.bn.weight, backbone.layer3.4.conv3.bn.bias, backbone.layer3.4.conv3.bn.running_mean, backbone.layer3.4.conv3.bn.running_var, backbone.layer3.4.conv3.bn.num_batches_tracked, backbone.layer3.5.conv1.conv.weight, backbone.layer3.5.conv1.bn.weight, backbone.layer3.5.conv1.bn.bias, backbone.layer3.5.conv1.bn.running_mean, backbone.layer3.5.conv1.bn.running_var, backbone.layer3.5.conv1.bn.num_batches_tracked, backbone.layer3.5.conv2.conv.weight, backbone.layer3.5.conv2.bn.weight, backbone.layer3.5.conv2.bn.bias, backbone.layer3.5.conv2.bn.running_mean, backbone.layer3.5.conv2.bn.running_var, backbone.layer3.5.conv2.bn.num_batches_tracked, backbone.layer3.5.conv3.conv.weight, backbone.layer3.5.conv3.bn.weight, backbone.layer3.5.conv3.bn.bias, backbone.layer3.5.conv3.bn.running_mean, backbone.layer3.5.conv3.bn.running_var, backbone.layer3.5.conv3.bn.num_batches_tracked, backbone.layer4.0.conv1.conv.weight, backbone.layer4.0.conv1.bn.weight, backbone.layer4.0.conv1.bn.bias, backbone.layer4.0.conv1.bn.running_mean, backbone.layer4.0.conv1.bn.running_var, backbone.layer4.0.conv1.bn.num_batches_tracked, backbone.layer4.0.conv2.conv.weight, backbone.layer4.0.conv2.bn.weight, backbone.layer4.0.conv2.bn.bias, backbone.layer4.0.conv2.bn.running_mean, backbone.layer4.0.conv2.bn.running_var, backbone.layer4.0.conv2.bn.num_batches_tracked, backbone.layer4.0.conv3.conv.weight, backbone.layer4.0.conv3.bn.weight, backbone.layer4.0.conv3.bn.bias, backbone.layer4.0.conv3.bn.running_mean, backbone.layer4.0.conv3.bn.running_var, backbone.layer4.0.conv3.bn.num_batches_tracked, backbone.layer4.0.downsample.conv.weight, backbone.layer4.0.downsample.bn.weight, backbone.layer4.0.downsample.bn.bias, backbone.layer4.0.downsample.bn.running_mean, backbone.layer4.0.downsample.bn.running_var, backbone.layer4.0.downsample.bn.num_batches_tracked, backbone.layer4.1.conv1.conv.weight, backbone.layer4.1.conv1.bn.weight, backbone.layer4.1.conv1.bn.bias, backbone.layer4.1.conv1.bn.running_mean, backbone.layer4.1.conv1.bn.running_var, backbone.layer4.1.conv1.bn.num_batches_tracked, backbone.layer4.1.conv2.conv.weight, backbone.layer4.1.conv2.bn.weight, backbone.layer4.1.conv2.bn.bias, backbone.layer4.1.conv2.bn.running_mean, backbone.layer4.1.conv2.bn.running_var, backbone.layer4.1.conv2.bn.num_batches_tracked, backbone.layer4.1.conv3.conv.weight, backbone.layer4.1.conv3.bn.weight, backbone.layer4.1.conv3.bn.bias, backbone.layer4.1.conv3.bn.running_mean, backbone.layer4.1.conv3.bn.running_var, backbone.layer4.1.conv3.bn.num_batches_tracked, backbone.layer4.2.conv1.conv.weight, backbone.layer4.2.conv1.bn.weight, backbone.layer4.2.conv1.bn.bias, backbone.layer4.2.conv1.bn.running_mean, backbone.layer4.2.conv1.bn.running_var, backbone.layer4.2.conv1.bn.num_batches_tracked, backbone.layer4.2.conv2.conv.weight, backbone.layer4.2.conv2.bn.weight, backbone.layer4.2.conv2.bn.bias, backbone.layer4.2.conv2.bn.running_mean, backbone.layer4.2.conv2.bn.running_var, backbone.layer4.2.conv2.bn.num_batches_tracked, backbone.layer4.2.conv3.conv.weight, backbone.layer4.2.conv3.bn.weight, backbone.layer4.2.conv3.bn.bias, backbone.layer4.2.conv3.bn.running_mean, backbone.layer4.2.conv3.bn.running_var, backbone.layer4.2.conv3.bn.num_batches_tracked

missing keys in source state_dict: backbone.patch_embed.proj.weight, backbone.patch_embed.proj.bias, backbone.patch_embed.norm.weight, backbone.patch_embed.norm.bias, backbone.layers.0.blocks.0.norm1.weight, backbone.layers.0.blocks.0.norm1.bias, backbone.layers.0.blocks.0.attn.relative_position_bias_table, backbone.layers.0.blocks.0.attn.relative_position_index, backbone.layers.0.blocks.0.attn.qkv.weight, backbone.layers.0.blocks.0.attn.qkv.bias, backbone.layers.0.blocks.0.attn.proj.weight, backbone.layers.0.blocks.0.attn.proj.bias, backbone.layers.0.blocks.0.norm2.weight, backbone.layers.0.blocks.0.norm2.bias, backbone.layers.0.blocks.0.mlp.fc1.weight, backbone.layers.0.blocks.0.mlp.fc1.bias, backbone.layers.0.blocks.0.mlp.fc2.weight, backbone.layers.0.blocks.0.mlp.fc2.bias, backbone.layers.0.blocks.1.norm1.weight, backbone.layers.0.blocks.1.norm1.bias, backbone.layers.0.blocks.1.attn.relative_position_bias_table, backbone.layers.0.blocks.1.attn.relative_position_index, backbone.layers.0.blocks.1.attn.qkv.weight, backbone.layers.0.blocks.1.attn.qkv.bias, backbone.layers.0.blocks.1.attn.proj.weight, backbone.layers.0.blocks.1.attn.proj.bias, backbone.layers.0.blocks.1.norm2.weight, backbone.layers.0.blocks.1.norm2.bias, backbone.layers.0.blocks.1.mlp.fc1.weight, backbone.layers.0.blocks.1.mlp.fc1.bias, backbone.layers.0.blocks.1.mlp.fc2.weight, backbone.layers.0.blocks.1.mlp.fc2.bias, backbone.layers.0.downsample.reduction.weight, backbone.layers.0.downsample.norm.weight, backbone.layers.0.downsample.norm.bias, backbone.layers.1.blocks.0.norm1.weight, backbone.layers.1.blocks.0.norm1.bias, backbone.layers.1.blocks.0.attn.relative_position_bias_table, backbone.layers.1.blocks.0.attn.relative_position_index, backbone.layers.1.blocks.0.attn.qkv.weight, backbone.layers.1.blocks.0.attn.qkv.bias, backbone.layers.1.blocks.0.attn.proj.weight, backbone.layers.1.blocks.0.attn.proj.bias, backbone.layers.1.blocks.0.norm2.weight, backbone.layers.1.blocks.0.norm2.bias, backbone.layers.1.blocks.0.mlp.fc1.weight, backbone.layers.1.blocks.0.mlp.fc1.bias, backbone.layers.1.blocks.0.mlp.fc2.weight, backbone.layers.1.blocks.0.mlp.fc2.bias, backbone.layers.1.blocks.1.norm1.weight, backbone.layers.1.blocks.1.norm1.bias, backbone.layers.1.blocks.1.attn.relative_position_bias_table, backbone.layers.1.blocks.1.attn.relative_position_index, backbone.layers.1.blocks.1.attn.qkv.weight, backbone.layers.1.blocks.1.attn.qkv.bias, backbone.layers.1.blocks.1.attn.proj.weight, backbone.layers.1.blocks.1.attn.proj.bias, backbone.layers.1.blocks.1.norm2.weight, backbone.layers.1.blocks.1.norm2.bias, backbone.layers.1.blocks.1.mlp.fc1.weight, backbone.layers.1.blocks.1.mlp.fc1.bias, backbone.layers.1.blocks.1.mlp.fc2.weight, backbone.layers.1.blocks.1.mlp.fc2.bias, backbone.layers.1.downsample.reduction.weight, backbone.layers.1.downsample.norm.weight, backbone.layers.1.downsample.norm.bias, backbone.layers.2.blocks.0.norm1.weight, backbone.layers.2.blocks.0.norm1.bias, backbone.layers.2.blocks.0.attn.relative_position_bias_table, backbone.layers.2.blocks.0.attn.relative_position_index, backbone.layers.2.blocks.0.attn.qkv.weight, backbone.layers.2.blocks.0.attn.qkv.bias, backbone.layers.2.blocks.0.attn.proj.weight, backbone.layers.2.blocks.0.attn.proj.bias, backbone.layers.2.blocks.0.norm2.weight, backbone.layers.2.blocks.0.norm2.bias, backbone.layers.2.blocks.0.mlp.fc1.weight, backbone.layers.2.blocks.0.mlp.fc1.bias, backbone.layers.2.blocks.0.mlp.fc2.weight, backbone.layers.2.blocks.0.mlp.fc2.bias, backbone.layers.2.blocks.1.norm1.weight, backbone.layers.2.blocks.1.norm1.bias, backbone.layers.2.blocks.1.attn.relative_position_bias_table, backbone.layers.2.blocks.1.attn.relative_position_index, backbone.layers.2.blocks.1.attn.qkv.weight, backbone.layers.2.blocks.1.attn.qkv.bias, backbone.layers.2.blocks.1.attn.proj.weight, backbone.layers.2.blocks.1.attn.proj.bias, backbone.layers.2.blocks.1.norm2.weight, backbone.layers.2.blocks.1.norm2.bias, backbone.layers.2.blocks.1.mlp.fc1.weight, backbone.layers.2.blocks.1.mlp.fc1.bias, backbone.layers.2.blocks.1.mlp.fc2.weight, backbone.layers.2.blocks.1.mlp.fc2.bias, backbone.layers.2.blocks.2.norm1.weight, backbone.layers.2.blocks.2.norm1.bias, backbone.layers.2.blocks.2.attn.relative_position_bias_table, backbone.layers.2.blocks.2.attn.relative_position_index, backbone.layers.2.blocks.2.attn.qkv.weight, backbone.layers.2.blocks.2.attn.qkv.bias, backbone.layers.2.blocks.2.attn.proj.weight, backbone.layers.2.blocks.2.attn.proj.bias, backbone.layers.2.blocks.2.norm2.weight, backbone.layers.2.blocks.2.norm2.bias, backbone.layers.2.blocks.2.mlp.fc1.weight, backbone.layers.2.blocks.2.mlp.fc1.bias, backbone.layers.2.blocks.2.mlp.fc2.weight, backbone.layers.2.blocks.2.mlp.fc2.bias, backbone.layers.2.blocks.3.norm1.weight, backbone.layers.2.blocks.3.norm1.bias, backbone.layers.2.blocks.3.attn.relative_position_bias_table, backbone.layers.2.blocks.3.attn.relative_position_index, backbone.layers.2.blocks.3.attn.qkv.weight, backbone.layers.2.blocks.3.attn.qkv.bias, backbone.layers.2.blocks.3.attn.proj.weight, backbone.layers.2.blocks.3.attn.proj.bias, backbone.layers.2.blocks.3.norm2.weight, backbone.layers.2.blocks.3.norm2.bias, backbone.layers.2.blocks.3.mlp.fc1.weight, backbone.layers.2.blocks.3.mlp.fc1.bias, backbone.layers.2.blocks.3.mlp.fc2.weight, backbone.layers.2.blocks.3.mlp.fc2.bias, backbone.layers.2.blocks.4.norm1.weight, backbone.layers.2.blocks.4.norm1.bias, backbone.layers.2.blocks.4.attn.relative_position_bias_table, backbone.layers.2.blocks.4.attn.relative_position_index, backbone.layers.2.blocks.4.attn.qkv.weight, backbone.layers.2.blocks.4.attn.qkv.bias, backbone.layers.2.blocks.4.attn.proj.weight, backbone.layers.2.blocks.4.attn.proj.bias, backbone.layers.2.blocks.4.norm2.weight, backbone.layers.2.blocks.4.norm2.bias, backbone.layers.2.blocks.4.mlp.fc1.weight, backbone.layers.2.blocks.4.mlp.fc1.bias, backbone.layers.2.blocks.4.mlp.fc2.weight, backbone.layers.2.blocks.4.mlp.fc2.bias, backbone.layers.2.blocks.5.norm1.weight, backbone.layers.2.blocks.5.norm1.bias, backbone.layers.2.blocks.5.attn.relative_position_bias_table, backbone.layers.2.blocks.5.attn.relative_position_index, backbone.layers.2.blocks.5.attn.qkv.weight, backbone.layers.2.blocks.5.attn.qkv.bias, backbone.layers.2.blocks.5.attn.proj.weight, backbone.layers.2.blocks.5.attn.proj.bias, backbone.layers.2.blocks.5.norm2.weight, backbone.layers.2.blocks.5.norm2.bias, backbone.layers.2.blocks.5.mlp.fc1.weight, backbone.layers.2.blocks.5.mlp.fc1.bias, backbone.layers.2.blocks.5.mlp.fc2.weight, backbone.layers.2.blocks.5.mlp.fc2.bias, backbone.layers.2.downsample.reduction.weight, backbone.layers.2.downsample.norm.weight, backbone.layers.2.downsample.norm.bias, backbone.layers.3.blocks.0.norm1.weight, backbone.layers.3.blocks.0.norm1.bias, backbone.layers.3.blocks.0.attn.relative_position_bias_table, backbone.layers.3.blocks.0.attn.relative_position_index, backbone.layers.3.blocks.0.attn.qkv.weight, backbone.layers.3.blocks.0.attn.qkv.bias, backbone.layers.3.blocks.0.attn.proj.weight, backbone.layers.3.blocks.0.attn.proj.bias, backbone.layers.3.blocks.0.norm2.weight, backbone.layers.3.blocks.0.norm2.bias, backbone.layers.3.blocks.0.mlp.fc1.weight, backbone.layers.3.blocks.0.mlp.fc1.bias, backbone.layers.3.blocks.0.mlp.fc2.weight, backbone.layers.3.blocks.0.mlp.fc2.bias, backbone.layers.3.blocks.1.norm1.weight, backbone.layers.3.blocks.1.norm1.bias, backbone.layers.3.blocks.1.attn.relative_position_bias_table, backbone.layers.3.blocks.1.attn.relative_position_index, backbone.layers.3.blocks.1.attn.qkv.weight, backbone.layers.3.blocks.1.attn.qkv.bias, backbone.layers.3.blocks.1.attn.proj.weight, backbone.layers.3.blocks.1.attn.proj.bias, backbone.layers.3.blocks.1.norm2.weight, backbone.layers.3.blocks.1.norm2.bias, backbone.layers.3.blocks.1.mlp.fc1.weight, backbone.layers.3.blocks.1.mlp.fc1.bias, backbone.layers.3.blocks.1.mlp.fc2.weight, backbone.layers.3.blocks.1.mlp.fc2.bias, backbone.norm3.weight, backbone.norm3.bias

04/02 16:22:34 - mmengine - INFO - Load checkpoint from /home/ubuntu/Dorolaw/ai-model/checkpoints/tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb_20220906-2692d16c.pth
/root/miniconda3/envs/Dorolaw/ai-model-env/lib/python3.8/site-packages/mmengine/optim/optimizer/zero_optimizer.py:11: DeprecationWarning: `TorchScript` support for functional optimizers is deprecated and will be removed in a future PyTorch release. Consider using the `torch.compile` optimizer instead.
  from torch.distributed.optim import \
/root/miniconda3/envs/Dorolaw/ai-model-env/lib/python3.8/site-packages/mmcv/cnn/bricks/transformer.py:33: UserWarning: Fail to import ``MultiScaleDeformableAttention`` from ``mmcv.ops.multi_scale_deform_attn``, You should install ``mmcv`` rather than ``mmcv-lite`` if you need this module. 
  warnings.warn('Fail to import ``MultiScaleDeformableAttention`` from '
/root/miniconda3/envs/Dorolaw/ai-model-env/lib/python3.8/site-packages/torch/functional.py:513: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3609.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
/root/miniconda3/envs/Dorolaw/ai-model-env/lib/python3.8/site-packages/mmengine/runner/checkpoint.py:347: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(filename, map_location=map_location)
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:22:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
04/02 16:22:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
04/02 16:28:44 - mmengine - INFO - Epoch(test) [100/154]    eta: 0:03:19  time: 3.8541  data_time: 0.0162  memory: 8063  
04/02 16:32:14 - mmengine - INFO - Results has been saved to /home/ubuntu/Dorolaw/ai-model/work_dirs/benchmark_result/TSN_result.pkl.
04/02 16:32:14 - mmengine - INFO - Epoch(test) [154/154]    acc/top1: 0.0000  acc/top5: 0.0065  acc/mean1: 0.0000  data_time: 0.0302  time: 3.7637
